services:
  db:
    image: postgis/postgis
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - ${DB_PORT}:5432

  db-migrations:
    build:
      context: .
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    command: sqlx database setup --source ogcapi-drivers/migrations

  server:
    init: true
    build:
      context: .
      args:
        - CARGO_WATCH=true
    environment:
      - VIRTUAL_HOST=poc.meteoschweiz-poc.swisstopo.cloud
      - VIRTUAL_PORT=8484
      - LETSENCRYPT_HOST=poc.meteoschweiz-poc.swisstopo.cloud
      - RUST_LOG=${RUST_LOG}
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - APP_USER=${APP_USER}
      - APP_PASSWORD=${APP_PASSWORD}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_CUSTOM_ENDPOINT=http://minio:9000
    volumes:
      - ./ogcapi:/app/ogcapi:ro
      - ./ogcapi-drivers/src:/app/ogcapi-drivers/src:ro
      - ./ogcapi-drivers/Cargo.toml:/app/ogcapi-drivers/Cargo.toml:ro
      - ./ogcapi-drivers/migrations:/app/ogcapi-drivers/migrations:ro
      - ./ogcapi-services/src:/app/ogcapi-services/src:ro
      - ./ogcapi-services/Cargo.toml:/app/ogcapi-services/Cargo.toml:ro
      - ./ogcapi-types:/app/ogcapi-types:ro
    depends_on:
      db:
        condition: service_healthy
    command: cargo watch --poll -x 'run -- serve'
    ports:
      - ${APP_PORT}:${APP_PORT}

  cli:
    init: true
    build:
      context: .
    container_name: ogcapi
    environment:
      - RUST_LOG=${RUST_LOG}
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_CUSTOM_ENDPOINT=http://minio:9000
    volumes:
      - ./ogcapi:/app/ogcapi:ro
      - ./ogcapi-drivers/src:/app/ogcapi-drivers/src:ro
      - ./ogcapi-drivers/Cargo.toml:/app/ogcapi-drivers/Cargo.toml:ro
      - ./ogcapi-drivers/migrations:/app/ogcapi-drivers/migrations:ro
      - ./ogcapi-services/src:/app/ogcapi-services/src:ro
      - ./ogcapi-services/Cargo.toml:/app/ogcapi-services/Cargo.toml:ro
      - ./ogcapi-types:/app/ogcapi-types:ro
    depends_on:
      db:
        condition: service_healthy
    command: tail -f /dev/null

  minio:
    image: minio/minio
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000
      - 9001:9001
